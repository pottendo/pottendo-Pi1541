diff --git a/addon/fatfs/ffconf.h b/addon/fatfs/ffconf.h
index 6a1efcfe..c1bf5acf 100644
--- a/addon/fatfs/ffconf.h
+++ b/addon/fatfs/ffconf.h
@@ -47,7 +47,7 @@
 /  (0:Disable or 1:Enable) Also FF_FS_READONLY needs to be 0 to enable this option. */
 
 
-#define FF_USE_LABEL	0
+#define FF_USE_LABEL	1
 /* This option switches volume label API functions, f_getlabel() and f_setlabel().
 /  (0:Disable or 1:Enable) */
 
@@ -171,7 +171,7 @@
 
 
 #define FF_STR_VOLUME_ID	1
-#define FF_VOLUME_STRS		"SD","USB","USB2","USB3","FD"
+/*#define FF_VOLUME_STRS		"SD","USB","USB2","USB3","FD" */
 /* FF_STR_VOLUME_ID switches support for volume ID in arbitrary strings.
 /  When FF_STR_VOLUME_ID is set to 1 or 2, arbitrary strings can be used as drive
 /  number in the path name. FF_VOLUME_STRS defines the volume ID strings for each
diff --git a/boot/Makefile b/boot/Makefile
index 236f32e1..3a21bac9 100644
--- a/boot/Makefile
+++ b/boot/Makefile
@@ -14,7 +14,7 @@
 # Use firmware revision built/committed on: Nov 26 2024
 FIRMWARE ?= 4bb9d889a9d48c7335ebe53c0b8be83285ea54b1
 
-BASEURL = https://github.com/raspberrypi/firmware/blob/$(FIRMWARE)/boot
+BASEURL = https://github.com/raspberrypi/firmware/raw/$(FIRMWARE)/boot
 
 FILES = LICENCE.broadcom COPYING.linux \
 	bootcode.bin start.elf fixup.dat start4.elf fixup4.dat \
@@ -32,12 +32,12 @@ firmware: clean
 	@for file in $(FILES) ; \
 	do \
 		echo Downloading $$file ... ; \
-		wget -q -O $$file $(BASEURL)/$$file?raw=true ; \
+		wget -q -O $$file $(BASEURL)/$$file ; \
 	done
 	@for file in $(OVERLAYS) ; \
 	do \
 		echo Downloading $$file ... ; \
-		wget -q -O $$file $(BASEURL)/overlays/$$file?raw=true ; \
+		wget -q -O $$file $(BASEURL)/overlays/$$file ; \
 	done
 
 all: firmware armstub bootloader
diff --git a/include/circle/sysconfig.h b/include/circle/sysconfig.h
index 566e6eb7..079cdf2b 100644
--- a/include/circle/sysconfig.h
+++ b/include/circle/sysconfig.h
@@ -35,14 +35,14 @@
 // increase this value. The value must be a multiple of 16 KByte.
 
 #ifndef KERNEL_MAX_SIZE
-#define KERNEL_MAX_SIZE		(2 * MEGABYTE)
+#define KERNEL_MAX_SIZE		(8 * MEGABYTE)
 #endif
 
 // KERNEL_STACK_SIZE is the size of the stack set on startup for the
 // main thread.  This must be a multiple of 16 KByte.
 
 #ifndef KERNEL_STACK_SIZE
-#define KERNEL_STACK_SIZE	0x20000
+#define KERNEL_STACK_SIZE	(8 * 0x20000)
 #endif
 
 // HEAP_DEFAULT_NEW defines the default heap to be used for the "new"
@@ -85,7 +85,7 @@
 // multiple of 64. Up to 20 sizes can be defined.
 
 #ifndef HEAP_BLOCK_BUCKET_SIZES
-#define HEAP_BLOCK_BUCKET_SIZES	0x40,0x400,0x1000,0x4000,0x10000,0x40000,0x80000
+#define HEAP_BLOCK_BUCKET_SIZES	0x40,0x400,0x1000,0x4000,0x10000,0x40000,0x80000,0x80000*8
 #endif
 
 ///////////////////////////////////////////////////////////////////////
@@ -155,7 +155,7 @@
 // single core applications, because this may slow down the system
 // because multiple cores may compete for bus time without use.
 
-//#define ARM_ALLOW_MULTI_CORE
+#define ARM_ALLOW_MULTI_CORE
 
 #endif
 
@@ -273,13 +273,13 @@
 // MAX_TASKS is the maximum number of tasks in the system.
 
 #ifndef MAX_TASKS
-#define MAX_TASKS		20
+#define MAX_TASKS		(4*20)
 #endif
 
 // TASK_STACK_SIZE is the stack size for each task.
 
 #ifndef TASK_STACK_SIZE
-#define TASK_STACK_SIZE		0x8000
+#define TASK_STACK_SIZE		(4*0x8000)
 #endif
 
 // NO_BUSY_WAIT deactivates busy waiting in the EMMC, SDHOST and USB
